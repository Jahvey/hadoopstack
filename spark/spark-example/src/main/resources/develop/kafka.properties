zk.connect=:2181
bootstrap.servers=:9092
group.id=kafka-streaming
###Overhead不需要单位，默认MB
am.memory=256m
am.memoryOverhead=256
executor.memoryOverhead=256

#################################### 分批插入，每次插入数据多但是频次不快 ################################################
# CarrierFetch      3031630 平均6秒插入一次，一次最多1000条，【可设置参数：1 3 1000】
kafka.topic.1=CarrierFetch

#AlipayTradeFetch   753844 平均8秒插入一次，一次最多200条，【可设置参数：2 4 500】
kafka.topic.2=AlipayTradeFetch

#BillInfoFetch每分钟≈300、TaobaoOrderFetch每分钟≈150ssh、CreditFetch每分钟≈80，【可设置参数：3 4 1000】
kafka.topic.3=BillInfoFetch,TaobaoOrderFetch,CreditFetch


####################################### 处理速度要求快，量少 ############################################################
#EmailCheckStep每分钟≈200、BillDetailInfo每分钟≈120、BillPageFetch每分钟≈80，平均每秒10条 【可设置参数：4 1 500】
kafka.topic.4=EmailCheckStep,BillDetailInfo,BillPageFetch

#QQMailLoginLog每分钟≈200、Email每分钟≈30、EmailContent≈15、EmailExt≈15，平均每秒10条    【可设置参数：5 1 500】
kafka.topic.5=QQMailLoginLog,Email,EmailContent,EmailExt

#BillAmountInfo≈20、BillBaseInfo≈30、EmailAccount≈15、EmailAccountRepeatAmount≈8、TaobaoCustomerFetch≈5、EmailAccountRepeatAmount≈1，【可设置参数：6 2 300】
kafka.topic.6=BillAmountInfo,BillBaseInfo,EmailAccount,EmailAccountRepeatAmount,TaobaoCustomerFetch,AlipayAccountFetch

## 展示没有发现数据
kafka.topic.7=GjjPageFetch,GjjInfoFetch,EmailAccountRepeatAmountCheckResult,HServiceTest
#kafka.topic.8=AuthenticationCheckCount,AuthenticationIDNameInfo,AuthenticationJoinInfo,AuthenticationTopLocation,BlackGrayAccountList
#kafka.topic.9=CreditAddressLAuthenticationCheckCountist,CreditCarrierDataInfo,CreditCheckUserExist,CreditInferDataList,CreditMatchNameInfo,CreditMobileBindingInfo,CreditOnlineDataInfo,CreditOnlineDataInfoByMonth,CreditPersonalInfo,CreditRecentContacts


################################################## job 任务 ############################################################
##  AM container：256+max(256*0.10, 256) =512
##  executors container：256+max(256*0.10, 256) =512
# nohup /opt/cloudera/parcels/CDH/bin/spark-submit --master yarn-client --num-executors 1 --driver-memory 256m --executor-memory 256m --executor-cores 2 --class com.creditease.streaming.KafkaDataStream hspark-1.0.jar 1 3 1000 >1.log 2>&1 &
# nohup /opt/cloudera/parcels/CDH/bin/spark-submit --master yarn-client --num-executors 1 --driver-memory 256m --executor-memory 256m --executor-cores 2 --class com.creditease.streaming.KafkaDataStream hspark-1.0.jar 2 4 500 >2.log 2>&1 &
# nohup /opt/cloudera/parcels/CDH/bin/spark-submit --master yarn-client --num-executors 1 --driver-memory 256m --executor-memory 256m --executor-cores 2 --class com.creditease.streaming.KafkaDataStream hspark-1.0.jar 3 4 1000 >3.log 2>&1 &
# nohup /opt/cloudera/parcels/CDH/bin/spark-submit --master yarn-client --num-executors 1 --driver-memory 256m --executor-memory 256m --executor-cores 2 --class com.creditease.streaming.KafkaDataStream hspark-1.0.jar 4 1 500 >4.log 2>&1 &
# nohup /opt/cloudera/parcels/CDH/bin/spark-submit --master yarn-client --num-executors 1 --driver-memory 256m --executor-memory 256m --executor-cores 2 --class com.creditease.streaming.KafkaDataStream hspark-1.0.jar 5 1 500 >5.log 2>&1 &
# nohup /opt/cloudera/parcels/CDH/bin/spark-submit --master yarn-client --num-executors 1 --driver-memory 256m --executor-memory 256m --executor-cores 2 --class com.creditease.streaming.KafkaDataStream hspark-1.0.jar 6 2 300 >6.log 2>&1 &
# nohup /opt/cloudera/parcels/CDH/bin/spark-submit --master yarn-client --num-executors 1 --driver-memory 256m --executor-memory 256m --executor-cores 2 --class com.creditease.streaming.KafkaDataStream hspark-1.0.jar 7 10 500 >7.log 2>&1 &
